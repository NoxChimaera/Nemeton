/*
 * The MIT License
 *
 * Copyright 2016 Max Balushkin.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package edu.sibfu.isit.nemeton.views;

import de.erichseifert.gral.plots.XYPlot;
import de.erichseifert.gral.ui.InteractivePanel;
import edu.sibfu.isit.nemeton.controllers.HistoryController;
import edu.sibfu.isit.nemeton.framework.Pair;
import edu.sibfu.isit.nemeton.models.Result;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;

/**
 *
 * @author Max Balushkin
 */
public class HistoryView extends javax.swing.JFrame {

    private final HistoryController ctrl;
    
    /**
     * Creates new history view form.
     * 
     * @param aResults List of algorithm results
     * @param showParams Show parameter plots?
     */
    public HistoryView( List<Result> aResults, boolean showParams ) {
        initComponents();
        setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );
        
        ctrl = new HistoryController( this, aResults, showParams );
        
        InteractivePanel values = new InteractivePanel( ctrl.getPlot() );
        valuesPanel.add( values, BorderLayout.CENTER );
        
        List<Pair<String, XYPlot>> params = ctrl.getCoordinatePlots();
        for ( Pair<String, XYPlot> plot : params ) {
            InteractivePanel plotPanel = new InteractivePanel( plot.right() );
            plotPanel.setBorder( BorderFactory.createTitledBorder( plot.left() ) );
            coordsPanel.add( plotPanel );
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        valuesPanel = new javax.swing.JPanel();
        coordsScroll = new javax.swing.JScrollPane();
        coordsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jSplitPane1.setDividerLocation(500);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(800, 600));

        valuesPanel.setMinimumSize(new java.awt.Dimension(0, 600));
        valuesPanel.setPreferredSize(new java.awt.Dimension(500, 600));
        valuesPanel.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setLeftComponent(valuesPanel);

        coordsScroll.setBorder(javax.swing.BorderFactory.createTitledBorder("Параметры"));
        coordsScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        coordsScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        coordsScroll.setMinimumSize(new java.awt.Dimension(0, 600));

        coordsPanel.setLayout(new javax.swing.BoxLayout(coordsPanel, javax.swing.BoxLayout.Y_AXIS));
        coordsScroll.setViewportView(coordsPanel);

        jSplitPane1.setRightComponent(coordsScroll);

        getContentPane().add(jSplitPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel coordsPanel;
    private javax.swing.JScrollPane coordsScroll;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel valuesPanel;
    // End of variables declaration//GEN-END:variables
}
